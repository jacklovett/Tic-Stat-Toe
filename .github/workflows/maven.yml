name: Java CI with Maven

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    env:
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}  # Set DB_PASSWORD globally for the build job

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: TicStatToe
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Test with Maven
        run: mvn -B clean verify --file pom.xml

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'  # Only deploy on master branch

    steps:
      - uses: actions/checkout@v2

      # Add steps for deployment here, e.g., deploying to a server or cloud platform
      # Example: deploy using SSH or using deployment services like AWS Elastic Beanstalk or Heroku
      - name: Deploy to Server
        run: |
          ssh user@your-server 'bash -s' < deploy_script.sh
