name: CI with Maven and React

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: TicStatToe
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('client/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node

      - name: Install Dependencies
        run: yarn install
        working-directory: client

      - name: Build React Frontend
        run: yarn build
        working-directory: client

      - name: Deploy to GitHub Pages
        run: |
          git config --global user.email "jack.l.lovett@gmail.com"
          git config --global user.name "jacklovett"
          mv client/build build
          git add build
          git commit -m "Deploy React app to GitHub Pages"
          git push origin `git subtree split --prefix build master`:gh-pages --force

  test:
    name: JUnit Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: TicStatToe
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests with Maven
        run: mvn -B clean package -DskipTests

      - name: Maven Verify
        run: mvn -B clean verify
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
